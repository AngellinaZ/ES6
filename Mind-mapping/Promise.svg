<svg id="kity_svg_6" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="1210" height="686" style="background: rgb(251, 251, 251); visibility: visible;" viewBox="0 0 1210 686"><defs id="kity_defs_7"><linearGradient id="kity_linearGradient_17" x1="0" y1="0" x2="0" y2="1"><stop id="kity_stop_18" offset="0" stop-color="rgb(255, 255, 255)"></stop><stop id="kity_stop_19" offset="1" stop-color="rgb(204, 204, 204)"></stop></linearGradient><marker id="kity_marker_2" orient="auto" refX="6" refY="0" viewBox="-7 -7 14 14" markerWidth="7" markerHeight="7" markerUnits="userSpaceOnUse"><path id="kity_path_3" fill="rgb(115, 161, 191)" stroke="none" d="M6,0A6,6,0,1,1,-6,0A6,6,0,1,1,6,0"></path></marker></defs><g id="kity_g_8"><g id="minder1" text-rendering="optimize-speed"><g id="minder_connect_group1"><path id="kity_path_31" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M78,297.5A153.5,67,0,0,1,231.5,230.5"></path><path id="kity_path_33" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M302.5,230.5C309.5,230.5,309.5,198.5,316.5,198.5L664.5,198.5"></path><path id="kity_path_35" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M302.5,230.5C314.5,230.5,314.5,256.5,326.5,256.5L826.5,256.5"></path><path id="kity_path_37" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M78,297.5A156.5,213,0,0,1,234.5,84.5"></path><path id="kity_path_39" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M306.5,84.5C314.5,84.5,314.5,45.5,322.5,45.5L525.5,45.5"></path><path id="kity_path_41" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M306.5,84.5C313,84.5,313,91.5,319.5,91.5L699.5,91.5"></path><path id="kity_path_43" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M306.5,84.5C313,84.5,313,136.5,319.5,136.5L666.5,136.5"></path><path id="kity_path_45" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M78,297.5A101.5,43,0,0,0,179.5,340.5"></path><path id="kity_path_49" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M394.5,340.5C409.5,340.5,409.5,302.5,424.5,302.5L785.5,302.5"></path><path id="kity_path_51" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M394.5,340.5C409.5,340.5,409.5,354.5,424.5,354.5L679.5,354.5"></path><path id="kity_path_53" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M78,297.5A108.5,226,0,0,0,186.5,523.5"></path><path id="kity_path_65" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M78,297.5A123.5,340,0,0,0,201.5,637.5"></path><path id="kity_path_231" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M394.5,340.5C409.5,340.5,409.5,406.5,424.5,406.5L828.5,406.5"></path><path id="kity_path_248" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M629.5,510.5C651.5,510.5,651.5,458.5,673.5,458.5L1180.5,458.5"></path><path id="kity_path_249" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M629.5,510.5C649,510.5,649,508.5,668.5,508.5L1190.5,508.5"></path><path id="kity_path_250" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M371.5,523.5C397,523.5,397,510.5,422.5,510.5L629.5,510.5"></path><path id="kity_path_251" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M648.5,563.5C657,563.5,657,564.5,665.5,564.5L1188.5,564.5"></path><path id="kity_path_252" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M371.5,523.5C399.5,523.5,399.5,563.5,427.5,563.5L648.5,563.5"></path><path id="kity_path_253" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M368.5,637.5C389.5,637.5,389.5,621.5,410.5,621.5L658.5,621.5"></path><path id="kity_path_254" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M368.5,637.5C392,637.5,392,666.5,415.5,666.5L728.5,666.5"></path></g><g id="minder_node1"><path id="node_outline1" fill="rgb(115, 161, 191)" stroke="rgb(115, 161, 191)" d="M25.5,277.5h105a5,5,0,0,1,5,5v30a5,5,0,0,1,-5,5h-105a5,5,0,0,1,-5,-5v-30a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text1" fill="white"><text id="kity_text_22" text-rendering="inherit" font-size="16" dy=".8em" y="287.09999990463257" x="44.5">Promise&#xa0;</text></g></g><g id="kity_g_14" display="none"><path id="kity_path_15" fill="rgba(0, 92, 153, 0.5)" stroke="none" d="M434.5,309.5h245v15h-245z"></path><path id="kity_path_16" fill="none" stroke="rgb(0, 76, 128)" d="M434.5,324.5L679.5,324.5" stroke-width="1"></path></g><g id="minder_node2"><g id="node_expander3" style="cursor: pointer;"><path id="kity_path_152" fill="white" stroke="gray" d="M232.5,230.5A6,6,0,1,1,220.5,230.5A6,6,0,1,1,232.5,230.5"></path><path id="kity_path_153" fill="none" stroke="gray" d="M222,230.5L231,230.5"></path></g><path id="node_outline4" fill="rgb(238, 243, 246)" stroke="rgb(115, 161, 191)" d="M236.5,217.5h63a3,3,0,0,1,3,3v20a3,3,0,0,1,-3,3h-63a3,3,0,0,1,-3,-3v-20a3,3,0,0,1,3,-3z" stroke-width="1"></path><g id="node_text4" fill="black"><text id="kity_text_81" text-rendering="inherit" font-size="14" dy=".8em" y="221.40000009536743" x="253.5">用法</text></g></g><g id="minder_node3"><g id="node_expander1" style="cursor: pointer;" display="none"><path id="kity_path_146" fill="white" stroke="gray" d="M326.5,184.5A6,6,0,1,1,314.5,184.5A6,6,0,1,1,326.5,184.5"></path><path id="kity_path_147" fill="none" stroke="gray"></path></g><path id="node_outline2" fill="none" stroke="none" d="M331.5,173.5h328a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-328a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text2" fill="black"><text id="kity_text_77" text-rendering="inherit" font-size="12" dy=".8em" y="176.70000004768372" x="336.5">const promise = new Promise((resolve, reject) =&gt; {&#xa0; ...&#xa0; }</text></g></g><g id="minder_node4"><g id="node_expander2" style="cursor: pointer;" display="none"><path id="kity_path_149" fill="white" stroke="gray" d="M336.5,242.5A6,6,0,1,1,324.5,242.5A6,6,0,1,1,336.5,242.5"></path><path id="kity_path_150" fill="none" stroke="gray"></path></g><path id="node_outline3" fill="none" stroke="none" d="M341.5,231.5h480a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-480a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text3" fill="black"><text id="kity_text_79" text-rendering="inherit" font-size="12" dy=".8em" y="234.70000004768372" x="346.5">Promise实例生成以后，可用 then() 分别指定resolved状态和rejected状态的回调函数。</text></g></g><g id="minder_node5"><g id="node_expander7" style="cursor: pointer;"><path id="kity_path_164" fill="white" stroke="gray" d="M235.5,84.5A6,6,0,1,1,223.5,84.5A6,6,0,1,1,235.5,84.5"></path><path id="kity_path_165" fill="none" stroke="gray" d="M225,84.5L234,84.5"></path></g><path id="node_outline8" fill="rgb(238, 243, 246)" stroke="rgb(115, 161, 191)" d="M239.5,71.5h64a3,3,0,0,1,3,3v20a3,3,0,0,1,-3,3h-64a3,3,0,0,1,-3,-3v-20a3,3,0,0,1,3,-3z" stroke-width="1"></path><g id="node_text8" fill="black"><text id="kity_text_89" text-rendering="inherit" font-size="14" dy=".8em" y="75.40000009536743" x="256.5">含义</text></g></g><g id="minder_node6"><g id="node_expander4" style="cursor: pointer;" display="none"><path id="kity_path_155" fill="white" stroke="gray" d="M332.5,31.5A6,6,0,1,1,320.5,31.5A6,6,0,1,1,332.5,31.5"></path><path id="kity_path_156" fill="none" stroke="gray"></path></g><path id="node_outline5" fill="none" stroke="none" d="M337.5,20.5h183a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-183a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text5" fill="black"><text id="kity_text_83" text-rendering="inherit" font-size="12" dy=".8em" y="23.700000047683716" x="342.5">异步编程，优于 回调函数和事件</text></g></g><g id="minder_node7"><g id="node_expander5" style="cursor: pointer;" display="none"><path id="kity_path_158" fill="white" stroke="gray" d="M329.5,77.5A6,6,0,1,1,317.5,77.5A6,6,0,1,1,329.5,77.5"></path><path id="kity_path_159" fill="none" stroke="gray"></path></g><path id="node_outline6" fill="none" stroke="none" d="M334.5,66.5h360a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-360a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text6" fill="black"><text id="kity_text_85" text-rendering="inherit" font-size="12" dy=".8em" y="69.70000004768372" x="339.5">三种状态，pending(进行中)，fulfiled(已成功)，rejected(已失败)</text></g></g><g id="minder_node8"><g id="node_expander6" style="cursor: pointer;" display="none"><path id="kity_path_161" fill="white" stroke="gray" d="M329.5,122.5A6,6,0,1,1,317.5,122.5A6,6,0,1,1,329.5,122.5"></path><path id="kity_path_162" fill="none" stroke="gray"></path></g><path id="node_outline7" fill="none" stroke="none" d="M334.5,111.5h327a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-327a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text7" fill="black"><text id="kity_text_87" text-rendering="inherit" font-size="12" dy=".8em" y="114.70000004768372" x="339.5">状态只能：pending --&gt; fulfilled, pending --&gt; rejected。</text></g></g><g id="minder_node9"><g id="node_expander11" style="cursor: pointer;"><path id="kity_path_176" fill="white" stroke="gray" d="M180.5,340.5A6,6,0,1,1,168.5,340.5A6,6,0,1,1,180.5,340.5"></path><path id="kity_path_177" fill="none" stroke="gray" d="M170,340.5L179,340.5"></path></g><path id="node_outline12" fill="rgb(238, 243, 246)" stroke="rgb(115, 161, 191)" d="M184.5,327.5h207a3,3,0,0,1,3,3v20a3,3,0,0,1,-3,3h-207a3,3,0,0,1,-3,-3v-20a3,3,0,0,1,3,-3z" stroke-width="1"></path><g id="node_text12" fill="black"><text id="kity_text_97" text-rendering="inherit" font-size="14" dy=".8em" y="331.40000009536743" x="201.5">.then() / .catch() /&#xa0;.finally()</text></g></g><g id="minder_node11"><g id="node_expander9" style="cursor: pointer;" display="none"><path id="kity_path_170" fill="white" stroke="gray" d="M434.5,288.5A6,6,0,1,1,422.5,288.5A6,6,0,1,1,434.5,288.5"></path><path id="kity_path_171" fill="none" stroke="gray" d="M424,288.5L433,288.5"></path></g><path id="node_outline10" fill="none" stroke="none" d="M439.5,277.5h341a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-341a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text10" fill="black"><text id="kity_text_93" text-rendering="inherit" font-size="12" dy=".8em" y="280.7000000476837" x="444.5">.then( )返回一个新的Promise实例。链式写法.then(..).then(...)</text></g></g><g id="minder_node12"><g id="node_expander10" style="cursor: pointer;" display="none"><path id="kity_path_173" fill="white" stroke="gray" d="M434.5,340.5A6,6,0,1,1,422.5,340.5A6,6,0,1,1,434.5,340.5"></path><path id="kity_path_174" fill="none" stroke="gray"></path></g><path id="node_outline11" fill="none" stroke="none" d="M439.5,329.5h235a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-235a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text11" fill="black"><text id="kity_text_95" text-rendering="inherit" font-size="12" dy=".8em" y="332.7000000476837" x="444.5">.catch() 用于指定发生错误时的回调函数。</text></g></g><g id="minder_node13" opacity="1"><g id="node_expander17" style="cursor: pointer;"><path id="kity_path_194" fill="white" stroke="gray" d="M384.5,523.5A6,6,0,1,1,372.5,523.5A6,6,0,1,1,384.5,523.5"></path><path id="kity_path_195" fill="none" stroke="gray" d="M374,523.5L383,523.5"></path></g><path id="node_outline18" fill="rgb(238, 243, 246)" stroke="rgb(115, 161, 191)" d="M191.5,510.5h177a3,3,0,0,1,3,3v20a3,3,0,0,1,-3,3h-177a3,3,0,0,1,-3,-3v-20a3,3,0,0,1,3,-3z" stroke-width="1"></path><g id="node_text18" fill="black"><text id="kity_text_109" text-rendering="inherit" font-size="14" dy=".8em" y="514.4000000953674" x="208.5">包装多个Promise 实例</text></g></g><g id="minder_node19" opacity="1"><g id="node_expander20" style="cursor: pointer;"><path id="kity_path_203" fill="white" stroke="gray" d="M381.5,637.5A6,6,0,1,1,369.5,637.5A6,6,0,1,1,381.5,637.5"></path><path id="kity_path_204" fill="none" stroke="gray" d="M371,637.5L380,637.5"></path></g><path id="node_outline21" fill="rgb(238, 243, 246)" stroke="rgb(115, 161, 191)" d="M206.5,624.5h159a3,3,0,0,1,3,3v20a3,3,0,0,1,-3,3h-159a3,3,0,0,1,-3,-3v-20a3,3,0,0,1,3,-3z" stroke-width="1"></path><g id="node_text21" fill="black"><text id="kity_text_115" text-rendering="inherit" font-size="14" dy=".8em" y="628.4000000953674" x="223.5">.resolve() / .reject()</text></g></g><g id="kity_g_12" display="none"><path id="kity_path_13" fill="none" stroke="rgb(66, 94, 112)" d="M439.5,329.5h235a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-235a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="5"></path></g><g id="minder_node27"><g id="node_expander26" style="cursor: pointer;" display="none"><path id="kity_path_236" fill="white" stroke="gray" d="M434.5,392.5A6,6,0,1,1,422.5,392.5A6,6,0,1,1,434.5,392.5"></path><path id="kity_path_237" fill="none" stroke="gray"></path></g><path id="node_outline27" fill="none" stroke="none" d="M439.5,381.5h384a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-384a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text27" fill="black"><text id="kity_text_233" text-rendering="inherit" font-size="12" dy=".8em" y="384.7000000476837" x="444.5">.finally()用于指定不管 Promise 对象最后状态如何，都会执行的操作。</text></g></g><g id="minder_node15"><g id="node_expander12" style="cursor: pointer;" display="none"><path id="kity_path_179" fill="white" stroke="gray" d="M1192.5,444.5A6,6,0,1,1,1180.5,444.5A6,6,0,1,1,1192.5,444.5"></path><path id="kity_path_180" fill="none" stroke="gray"></path></g><path id="node_outline13" fill="none" stroke="none" d="M688.5,433.5h487a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-487a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text13" fill="black"><text id="kity_text_99" text-rendering="inherit" font-size="12" dy=".8em" y="436.7000000476837" x="693.5">所有参数的状态都为fulfilled，p的状态才会变成fulfilled , 返回‘参数返回值组成的数组’</text></g></g><g id="minder_node16"><g id="node_expander13" style="cursor: pointer;" display="none"><path id="kity_path_182" fill="white" stroke="gray" d="M1202.5,494.5A6,6,0,1,1,1190.5,494.5A6,6,0,1,1,1202.5,494.5"></path><path id="kity_path_183" fill="none" stroke="gray"></path></g><path id="node_outline14" fill="none" stroke="none" d="M683.5,483.5h502a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-502a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text14" fill="black"><text id="kity_text_101" text-rendering="inherit" font-size="12" dy=".8em" y="486.7000000476837" x="688.5">参数中有一个被rejected，p的状态就变成rejected，返回‘第一个被reject的实例的返回值’</text></g></g><g id="minder_node14"><g id="node_expander14" style="cursor: pointer;"><path id="kity_path_185" fill="white" stroke="gray" d="M641.5,496.5A6,6,0,1,1,629.5,496.5A6,6,0,1,1,641.5,496.5"></path><path id="kity_path_186" fill="none" stroke="gray" d="M631,496.5L640,496.5"></path></g><path id="node_outline15" fill="none" stroke="none" d="M437.5,485.5h187a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-187a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text15" fill="black"><text id="kity_text_103" text-rendering="inherit" font-size="12" dy=".8em" y="488.7000000476837" x="442.5">let p = Promise.all([p1, p2, p3])</text></g></g><g id="minder_node18"><g id="node_expander15" style="cursor: pointer;" display="none"><path id="kity_path_188" fill="white" stroke="gray" d="M1200.5,550.5A6,6,0,1,1,1188.5,550.5A6,6,0,1,1,1200.5,550.5"></path><path id="kity_path_189" fill="none" stroke="gray"></path></g><path id="node_outline16" fill="none" stroke="none" d="M680.5,539.5h503a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-503a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text16" fill="black"><text id="kity_text_105" text-rendering="inherit" font-size="12" dy=".8em" y="542.7000000476837" x="685.5">参数中有一个先改变状态，p的状态就跟着改变。返回‘率先改变的 Promise 实例的返回值’</text></g></g><g id="minder_node17"><g id="node_expander16" style="cursor: pointer;"><path id="kity_path_191" fill="white" stroke="gray" d="M660.5,549.5A6,6,0,1,1,648.5,549.5A6,6,0,1,1,660.5,549.5"></path><path id="kity_path_192" fill="none" stroke="gray" d="M650,549.5L659,549.5"></path></g><path id="node_outline17" fill="none" stroke="none" d="M442.5,538.5h201a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-201a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text17" fill="black"><text id="kity_text_107" text-rendering="inherit" font-size="12" dy=".8em" y="541.7000000476837" x="447.5">let p = Promise.race([p1, p2, p3]);</text></g></g><g id="minder_node20"><g id="node_expander18" style="cursor: pointer;" display="none"><path id="kity_path_197" fill="white" stroke="gray" d="M670.5,607.5A6,6,0,1,1,658.5,607.5A6,6,0,1,1,670.5,607.5"></path><path id="kity_path_198" fill="none" stroke="gray"></path></g><path id="node_outline19" fill="none" stroke="none" d="M425.5,596.5h228a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-228a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text19" fill="black"><text id="kity_text_111" text-rendering="inherit" font-size="12" dy=".8em" y="599.7000000476837" x="430.5">.resolve() 将现有对象转为 Promise 对象</text></g></g><g id="minder_node21"><g id="node_expander19" style="cursor: pointer;" display="none"><path id="kity_path_200" fill="white" stroke="gray" d="M740.5,652.5A6,6,0,1,1,728.5,652.5A6,6,0,1,1,740.5,652.5"></path><path id="kity_path_201" fill="none" stroke="gray"></path></g><path id="node_outline20" fill="none" stroke="none" d="M430.5,641.5h293a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-293a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text20" fill="black"><text id="kity_text_113" text-rendering="inherit" font-size="12" dy=".8em" y="644.7000000476837" x="435.5">.reject()返回一个状态为rejected的新Promise 实例。</text></g></g></g></g></svg>